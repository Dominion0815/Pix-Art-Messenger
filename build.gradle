// Top-level build file where you can add configuration options common to all
// sub-projects/modules.
buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:2.3.3'
    }
}

apply plugin: 'com.android.application'

repositories {
    jcenter()
    mavenCentral()
    maven {
        url 'https://maven.google.com'
    }
    maven {
        url "https://jitpack.io"
    }
}

allprojects {
    repositories {
        maven { url "https://jitpack.io" }
        maven { url 'https://maven.google.com' }
    }
}

configurations {
    standardPushCompile
}

ext {
    supportLibVersion = '27.0.2'
}

dependencies {
    compile project(':libs:MemorizingTrustManager')
    compile project(':libs:android-transcoder')
    standardPushCompile 'com.google.android.gms:play-services-gcm:11.8.0'
    compile 'org.sufficientlysecure:openpgp-api:10.0'
    compile 'com.soundcloud.android:android-crop:1.0.1@aar'
    compile 'org.bouncycastle:bcprov-jdk15on:1.56'
    compile 'org.bouncycastle:bcmail-jdk15on:1.56'
    compile 'org.jitsi:org.otr4j:0.22'
    compile 'org.gnu.inet:libidn:1.15'
    compile 'com.google.zxing:core:3.3.0'
    compile 'com.google.zxing:android-integration:3.3.0'
    compile 'de.measite.minidns:minidns-hla:0.2.4'
    compile 'me.leolin:ShortcutBadger:1.1.19@aar'
    compile 'com.kyleduo.switchbutton:library:1.2.8'
    compile 'org.whispersystems:signal-protocol-java:2.6.2'
    compile 'com.makeramen:roundedimageview:2.3.0'
    compile 'jetty:javax.servlet:5.1.12'
    compile 'com.google.code.gson:gson:2.8.0'
    compile 'org.jbundle.util.osgi.wrapped:org.jbundle.util.osgi.wrapped.org.apache.http.client:4.1.2'
    compile "com.android.support:support-v13:$supportLibVersion"
    compile "com.android.support:appcompat-v7:$supportLibVersion"
    compile 'com.android.support:multidex:1.0.1'
    compile "com.android.support:support-v4:$supportLibVersion"
    compile "com.android.support:support-emoji:$supportLibVersion"
    compile "com.android.support:support-emoji-bundled:$supportLibVersion"
    compile 'com.github.bumptech.glide:glide:3.8.0'
    compile 'com.github.chrisbanes:PhotoView:2.0.0'
    compile 'com.github.rtoshiro.fullscreenvideoview:fullscreenvideoview:1.1.3'
    compile 'pub.devrel:easypermissions:1.1.1'
    compile 'com.wefika:flowlayout:0.4.1'
    compile 'com.googlecode.ez-vcard:ez-vcard:0.10.2'
}

ext {
    travisBuild = System.getenv("TRAVIS") == "true"
    preDexEnabled = System.getProperty("pre-dex", "true")
}

android {

    compileSdkVersion 26
    buildToolsVersion "26.0.2"

    defaultConfig {
        jackOptions {
            enabled true
        }

        minSdkVersion 16
        targetSdkVersion 25

        versionCode 211
        versionName "1.20.3"

        archivesBaseName += "-$versionName"
        applicationId "de.pixart.messenger"
        multiDexEnabled true
        buildConfigField("String", "XMPP_IP", '"185.26.156.37"')
        buildConfigField("Integer[]", "XMPP_Ports", "{61000, 65000}")
        buildConfigField("String", "DOMAIN_LOCK", '"pix-art.de"')
        buildConfigField("String", "UPDATE_URL", '"https://xmpp.pix-art.de/Pix-Art_Messenger/update/"')
    }

    dexOptions {
        // Skip pre-dexing when running on Travis CI or when disabled via -Dpre-dex=false.
        preDexLibraries = preDexEnabled && !travisBuild
        javaMaxHeapSize "4g"
        jumboMode true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    productFlavors {
        standardPush
        standard
        open {
            buildConfigField("String", "XMPP_IP", "null")
            buildConfigField("Integer[]", "XMPP_Ports", "null")
            buildConfigField("String", "DOMAIN_LOCK", "null")
            buildConfigField("String", "UPDATE_URL", '"https://xmpp.pix-art.de/Pix-Art_Messenger/update/open/"')
            applicationId "de.pixart.openmessenger"
        }
    }
    if (project.hasProperty('mStoreFile') &&
            project.hasProperty('mStorePassword') &&
            project.hasProperty('mKeyAlias') &&
            project.hasProperty('mKeyPassword')) {
        signingConfigs {
            release {
                storeFile file(mStoreFile)
                storePassword mStorePassword
                keyAlias mKeyAlias
                keyPassword mKeyPassword
            }
        }
        buildTypes {
            debug {
                minSdkVersion 14
                debuggable true
                buildTypes.release.signingConfig = null
                //applicationIdSuffix ".debug"
            }

            release {
                debuggable false
                signingConfig = signingConfigs.release
                minifyEnabled true
                shrinkResources true
                runProguard true
                proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            }
        }
    }

    lintOptions {
        disable 'ExtraTranslation', 'MissingTranslation', 'InvalidPackage', 'MissingQuantity', 'AppCompatResource'
    }

    subprojects {

        afterEvaluate {
            if (getPlugins().hasPlugin('android') ||
                    getPlugins().hasPlugin('android-library')) {

                configure(android.lintOptions) {
                    disable 'AndroidGradlePluginVersion', 'MissingTranslation'
                }
            }

        }
    }

    packagingOptions {
        exclude 'META-INF/BCKEY.DSA'
        exclude 'META-INF/BCKEY.SF'
    }
}